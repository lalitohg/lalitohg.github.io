{"componentChunkName":"component---src-templates-blog-post-js","path":"/instalacion-minima-de-babel-7","result":{"data":{"post":{"excerpt":"La versión número 7 de babel ya está disponible desde hace algún tiempo y si vas a iniciar algún proyecto Javascript no puedes dejar pasar…","html":"<p>La versión número 7 de babel ya está disponible desde hace algún tiempo y si vas a iniciar algún proyecto Javascript no puedes dejar pasar la oportunidad de probar esta versión.</p>\n<p>Lo más común es instalar Babel y algunos <strong>plugins</strong> específicos para que otras herramientas puedan tomar tu código ES6 y entenderlo para manipularlo o para exportarlo junto con cualquier otro recurso que necesite tu proyecto.</p>\n<p>Veamos como instalar Babel 7 con los <strong>plugins</strong> mínimos necesarios para traducir tu código ES6 a versiones compatibles con navegadores más viejos.</p>\n<h2>Instalación  mínima</h2>\n<p>Ahora con la versión 7 de babel los nombres de muchos <strong>plugins</strong> han cambiado un poco y hay una nueva versión del core de Babel. En general, los nombres de paquetes han cambiado de babel-<strong>paquete</strong> a @babel/<strong>paquete</strong>.</p>\n<p>Para tener lo mínimo necesario para traducir código ES6 a versiones compatibles primero hay que instalar unos cuantos módulos:</p>\n<p><code class=\"language-text\">npm i -D @babel/core @babel/cli @babel/preset-env @babel/register</code></p>\n<p><code class=\"language-text\">npm i @babel/polyfill core-js</code></p>\n<p>Esto es suficiente para que puedas pasar tu código ES6 a una versión compatible con ES5 o anteriores.</p>\n<p>Aquí hay que notar que en versiones anteriores es común encontrar varios <strong>preset</strong>, y ahora solamente necesitas instalar @babel/preset-env y eso es todo.</p>\n<h2>Configuración mínima</h2>\n<p>Lo mejor es tener un archivo de configuración que puedas modificar según tus necesidades.</p>\n<p>Como mínimo necesitas crear un archivo llamado babel.config.js y agregar el siguiente contenido:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> presets <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"@babel/env\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                edge<span class=\"token operator\">:</span> <span class=\"token string\">\"17\"</span><span class=\"token punctuation\">,</span>\n                firefox<span class=\"token operator\">:</span> <span class=\"token string\">\"32\"</span><span class=\"token punctuation\">,</span>\n                chrome<span class=\"token operator\">:</span> <span class=\"token string\">\"50\"</span><span class=\"token punctuation\">,</span>\n                safari<span class=\"token operator\">:</span> <span class=\"token string\">\"6.0\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span>\n            corejs<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> presets <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nota: Las versiones de la sección <strong>\"targets\"</strong> son un ejemplo arbitrario. Esto si lo vas a tener que ajustar según las necesidades reales de tu proyecto. Además, puede ser un ejemplo completamente obsoleto para cuando leas este artículo.</p>\n<h2>Probando el ambiente</h2>\n<p>Ahora solamente verificamos que nuestra nueva instalación de Babel 7 está lista para ser usada por otros procesos.</p>\n<p>Empecemos creando un archivo llamado <strong>index.js</strong> en la raíz del proyecto y pongamos algo de código ES6 dentro:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Ahora vamos a dejar que Babel haga lo suyo y que nos muestre el código transformado ejecutando:</p>\n<p><code class=\"language-text\">npx babel index.js</code></p>\n<p>Debemos ver una salida en consola como esto: </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"use strict\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hola'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Listo. Con esto comprobamos que Babel es capaz de tomar un código escrito en ES6 y transformarlo en su equivalente ES5 o anteriores. La configuración depende de las necesidades específicas de tu proyecto y las herramientas con las que Babel tenga que interactuar, como webpack, mocha, istambul, etc.</p>\n<h2>¿Qué sigue?</h2>\n<p>Con esta configuración básica es suficiente para que puedas iniciar tu proyecto JavaScript completamente en la versión ES6 o más recientes. En otros artículos voy a describir cómo podemos complementar esta configuración básica para integrar otras herramientas de uso común como mocha (ejecutar pruebas unitarias) o webpack (para empacar tu proyecto en un único script, por ejemplo).</p>\n<p>Espero que te sirva esta información y como siempre, si tienes algo que te gustaría comentar, puedes usar la <a href=\"%7B%7B%20site.url%20%7D%7D/contacto\">página de contacto</a> y si te interesa enterarte del nuevo contenido que se va publicando puedes <a href=\"%7B%7B%20site.url%20%7D%7D/subscribirte\">subscribirte</a>.</p>","frontmatter":{"title":"Instalación mínima de Babel 7","date":"2019-06-12","slug":"instalacion-minima-de-babel-7","language":null,"tags":["javascript","babel"],"cover":null,"imageShare":null}}},"pageContext":{"slug":"instalacion-minima-de-babel-7","previous":{"fileAbsolutePath":"/usr/src/app/content/posts/2019-05-30-conoce-los-terminos-comunes-en-git.md","frontmatter":{"title":"Conoce los términos comunes empleados con GIT.","slug":"conoce-los-terminos-comunes-empleados-con-git","tags":["productividad","git"],"language":null}},"next":{"fileAbsolutePath":"/usr/src/app/content/posts/2020-02-01-ejecutar-debugger-de-node-con-chrome.md","frontmatter":{"title":"Ejecutar el debugger de node con chrome","slug":"ejecutar-debugger-de-node-con-chrome","tags":["javascript","node","tip"],"language":"es"}}}}}