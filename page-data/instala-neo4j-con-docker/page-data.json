{"componentChunkName":"component---src-templates-blog-post-js","path":"/instala-neo4j-con-docker","result":{"data":{"post":{"excerpt":"Cada vez hay mas opciones de bases de datos para elegir la que m√°s nos convenga y en estos tiempos las bases de datos de grafos se est√°n‚Ä¶","html":"<p>Cada vez hay mas opciones de bases de datos para elegir la que m√°s nos convenga y en estos tiempos las bases de datos de grafos se est√°n volviendo cada vez m√°s populares.</p>\n<p>Vamos a ver c√≥mo podemos iniciar de forma sencilla un contenedor Docker de neo4j para empezar a usar esta novedosa forma de almacenar datos.</p>\n<p>Antes de comenzar aqu√≠ van algunas consideraciones:</p>\n<ul>\n<li>Docker ya debe estar instalado en tu computadora</li>\n<li>neo4j hasta la versi√≥n 3 solamente puede manejar una base de datos por instancia (no esperes algo como en Postgres donde puedes tener todas las bases que quieras iniciando un solo servidor)</li>\n<li>Para este ejemplo no vamos a usar ning√∫n tipo de autenticaci√≥n por lo que no es recomendable para un ambiente de producci√≥n</li>\n</ul>\n<h2>Instalar la imagen de neo4j</h2>\n<p>Para tener disponible la imagen de neo4j hay que descargarla del repositorio de Docker con el comando <code class=\"language-text\">docker pull neo4j</code></p>\n<p>Esto instala la versi√≥n m√°s reciente disponible aunque tal vez prefieras instalar una versi√≥n espec√≠fica para tener mas control sobre las actualizaciones. Puedes consultar el estado de las versiones disponibles en <a href=\"https://hub.docker.com/_/neo4j\">la p√°gina oficial de la imagen de neo4j</a> en Docker hub.</p>\n<h2>Ejecutar el contenedor de la imagen de neo4j</h2>\n<p>Por seguridad vamos a crear una carpeta en nuestro directorio personal para almacenar la base de datos y que no se destruya al detener el contenedor <code class=\"language-text\">mkdir $HOME/neo4j_data</code></p>\n<p>Y ahora iniciamos en contenedor <code class=\"language-text\">docker run --rm --name neo4j_test -p 7474:7474 -p 7687:7687 -v $HOME/neo4j_data:/data --env=NEO4J_AUTH=none neo4j</code></p>\n<p>Listo. Con esto debe iniciar el contenedor exponiendo los puertos 7474 y 7687 adem√°s de vincular el directorio de almacenamiento de datos de neo4j con nuestro directorio local y sin usar la autenticaci√≥n a la base de datos.</p>\n<h2>Ejecutar el cliente de consultas integrado</h2>\n<p>Para poder interactuar con la base de grafos solamente hay que abrir un navegador web y escribir la URL <strong><a href=\"http://localhost:7474\">http://localhost:7474</a></strong></p>\n<p>No es necesario ingresar ning√∫n usuario y contrase√±a y hay que recordar que solamente se puede usar una sola base de datos  (grafo) por instancia de neo4j en ejecuci√≥n (en la versi√≥n 3 y anteriores).</p>\n<h2>Conclusi√≥n</h2>\n<p>Con esto ya puedes empezar a utilizar una base de grafos de neo4j sin autenticaci√≥n corriendo desde un contenedor Docker.</p>\n<p>En otro post hablar√© de como usar la API web de neo4j para ejecutar queries desde un programa hecho en Node.</p>\n<p>Hasta la pr√≥xima üëã.</p>","frontmatter":{"title":"Instala neo4j con docker","date":"2020-02-03","slug":"instala-neo4j-con-docker","language":"es","tags":["Docker","Bases de datos","neo4j"],"cover":[{"publicURL":""}],"imageShare":{"publicURL":"http://doma.in"}}}},"pageContext":{"slug":"instala-neo4j-con-docker","previous":{"fileAbsolutePath":"/usr/src/app/content/posts/2020-02-01-ejecutar-debugger-de-node-con-chrome.md","frontmatter":{"title":"Ejecutar el debugger de node con chrome","slug":"ejecutar-debugger-de-node-con-chrome","tags":["javascript","node","tip"],"language":"es"}},"next":{"fileAbsolutePath":"/usr/src/app/content/posts/2020-02-04-como-usar-la-funcion-array-map-de-javascript.md","frontmatter":{"title":"C√≥mo usar la funcion array map de javascript","slug":"como-usar-la-funcion-array-map-de-javascript","tags":["javascript","fundamentos","programacion"],"language":"es"}}}}}